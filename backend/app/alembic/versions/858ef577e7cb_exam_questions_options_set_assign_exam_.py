"""exam,questions,options,set,assign_exam model added

Revision ID: 858ef577e7cb
Revises: 74ba04554a7b
Create Date: 2024-12-14 11:31:23.871349

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '858ef577e7cb'
down_revision: Union[str, None] = '74ba04554a7b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exam',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('status', mysql.TINYINT(), nullable=True, comment='1-> active , 2-> inactive'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exam_id'), 'exam', ['id'], unique=False)
    op.create_table('type_of_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('status', mysql.TINYINT(), nullable=True, comment='1-> active , 2-> inactive'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_type_of_question_id'), 'type_of_question', ['id'], unique=False)
    op.create_table('set',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('status', mysql.TINYINT(), nullable=True, comment='1-> active , 2-> inactive'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('exam_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_set_exam_id'), 'set', ['exam_id'], unique=False)
    op.create_index(op.f('ix_set_id'), 'set', ['id'], unique=False)
    op.create_table('assign_exam',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', mysql.TINYINT(), nullable=True, comment='1-> active , 2-> inactive'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('exam_id', sa.Integer(), nullable=True),
    sa.Column('set_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['set_id'], ['set.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assign_exam_batch_id'), 'assign_exam', ['batch_id'], unique=False)
    op.create_index(op.f('ix_assign_exam_course_id'), 'assign_exam', ['course_id'], unique=False)
    op.create_index(op.f('ix_assign_exam_exam_id'), 'assign_exam', ['exam_id'], unique=False)
    op.create_index(op.f('ix_assign_exam_id'), 'assign_exam', ['id'], unique=False)
    op.create_index(op.f('ix_assign_exam_set_id'), 'assign_exam', ['set_id'], unique=False)
    op.create_index(op.f('ix_assign_exam_student_id'), 'assign_exam', ['student_id'], unique=False)
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_title', sa.String(length=255), nullable=True),
    sa.Column('mark', sa.Integer(), nullable=True),
    sa.Column('no_of_answers', mysql.TINYINT(), nullable=True),
    sa.Column('status', mysql.TINYINT(), nullable=True, comment='1-> active , 2-> inactive'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('question_type_id', sa.Integer(), nullable=True),
    sa.Column('set_id', sa.Integer(), nullable=True),
    sa.Column('exam_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['question_type_id'], ['type_of_question.id'], ),
    sa.ForeignKeyConstraint(['set_id'], ['set.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_exam_id'), 'question', ['exam_id'], unique=False)
    op.create_index(op.f('ix_question_id'), 'question', ['id'], unique=False)
    op.create_index(op.f('ix_question_question_type_id'), 'question', ['question_type_id'], unique=False)
    op.create_index(op.f('ix_question_set_id'), 'question', ['set_id'], unique=False)
    op.create_table('option',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('answer_status', mysql.TINYINT(), nullable=True, comment='1->correct answer'),
    sa.Column('status', mysql.TINYINT(), nullable=True, comment='1-> active , 2-> inactive'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_option_id'), 'option', ['id'], unique=False)
    op.create_index(op.f('ix_option_question_id'), 'option', ['question_id'], unique=False)
    op.alter_column('batch', 'description',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=350),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('batch', 'description',
               existing_type=sa.String(length=350),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=True)
    op.drop_index(op.f('ix_option_question_id'), table_name='option')
    op.drop_index(op.f('ix_option_id'), table_name='option')
    op.drop_table('option')
    op.drop_index(op.f('ix_question_set_id'), table_name='question')
    op.drop_index(op.f('ix_question_question_type_id'), table_name='question')
    op.drop_index(op.f('ix_question_id'), table_name='question')
    op.drop_index(op.f('ix_question_exam_id'), table_name='question')
    op.drop_table('question')
    op.drop_index(op.f('ix_assign_exam_student_id'), table_name='assign_exam')
    op.drop_index(op.f('ix_assign_exam_set_id'), table_name='assign_exam')
    op.drop_index(op.f('ix_assign_exam_id'), table_name='assign_exam')
    op.drop_index(op.f('ix_assign_exam_exam_id'), table_name='assign_exam')
    op.drop_index(op.f('ix_assign_exam_course_id'), table_name='assign_exam')
    op.drop_index(op.f('ix_assign_exam_batch_id'), table_name='assign_exam')
    op.drop_table('assign_exam')
    op.drop_index(op.f('ix_set_id'), table_name='set')
    op.drop_index(op.f('ix_set_exam_id'), table_name='set')
    op.drop_table('set')
    op.drop_index(op.f('ix_type_of_question_id'), table_name='type_of_question')
    op.drop_table('type_of_question')
    op.drop_index(op.f('ix_exam_id'), table_name='exam')
    op.drop_table('exam')
    # ### end Alembic commands ###
