"""Message describing the migration

Revision ID: 7123b4a46050
Revises: ba58d8f87671
Create Date: 2024-11-30 16:59:08.372916

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '7123b4a46050'
down_revision: Union[str, None] = 'ba58d8f87671'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attendance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('check_in', sa.DateTime(), nullable=True),
    sa.Column('check_out', sa.DateTime(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('work_time', sa.Integer(), nullable=True),
    sa.Column('break_time', sa.Integer(), nullable=True),
    sa.Column('in_ip', sa.String(length=255), nullable=True),
    sa.Column('out_ip', sa.String(length=255), nullable=True),
    sa.Column('in_latitude', sa.DECIMAL(precision=15, scale=7), nullable=True),
    sa.Column('in_longitude', sa.DECIMAL(precision=15, scale=7), nullable=True),
    sa.Column('out_latitude', sa.DECIMAL(precision=15, scale=7), nullable=True),
    sa.Column('out_longitude', sa.DECIMAL(precision=15, scale=7), nullable=True),
    sa.Column('status', mysql.TINYINT(), nullable=True, comment='1-> active 2 -> inactive'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attendance_id'), 'attendance', ['id'], unique=False)
    op.create_table('task_detail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attendance_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', mysql.TINYINT(), nullable=True, comment='1-> active 2 -> inactive'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['attendance_id'], ['attendance.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_detail_id'), 'task_detail', ['id'], unique=False)
    op.create_table('work_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attendance_id', sa.Integer(), nullable=True),
    sa.Column('break_time', sa.DateTime(), nullable=True),
    sa.Column('breakEnd_time', sa.DateTime(), nullable=True),
    sa.Column('work_time', sa.DateTime(), nullable=True),
    sa.Column('workEnd_time', sa.DateTime(), nullable=True),
    sa.Column('status', mysql.TINYINT(), nullable=True, comment='1-> active 2 -> inactive'),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['attendance_id'], ['attendance.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_work_history_id'), 'work_history', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_work_history_id'), table_name='work_history')
    op.drop_table('work_history')
    op.drop_index(op.f('ix_task_detail_id'), table_name='task_detail')
    op.drop_table('task_detail')
    op.drop_index(op.f('ix_attendance_id'), table_name='attendance')
    op.drop_table('attendance')
    # ### end Alembic commands ###
